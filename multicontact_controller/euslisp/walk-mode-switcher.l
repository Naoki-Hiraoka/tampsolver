#!/usr/bin/env roseus

(ros::load-ros-manifest "roseus")
(ros::load-ros-manifest "geometry_msgs")
(ros::load-ros-manifest "std_srvs")
(ros::load-ros-manifest "multicontact_controller_msgs")

(ros::roseus "walk_mode_switcher" :anonymous nil)

(if (ros::has-param "base_frame")
    (setq *base-frame* (ros::get-param "base_frame"))
    (setq *base-frame* "BODY"))
(if (ros::has-param "odom_frame")
    (setq *odom-frame* (ros::get-param "odom_frame"))
    (setq *odom-frame* "odom"))
(if (ros::has-param "base_footprint_frame")
    (setq *base-footprint-frame* (ros::get-param "base_footprint_frame"))
    (setq *base-footprint-frame* "base_footprint"))

(if (and (ros::has-param "euslisp_file") (ros::has-param "robot"))
    (progn
      (load (ros::get-param "euslisp_file"))
      (eval (read-from-string (format nil "(~A-init)" (ros::get-param "robot")))))
    (progn
     (load "package://hrpsys_ros_bridge/euslisp/rtm-ros-robot-interface.l")
     (setq *ri* (instance rtm-ros-robot-interface :define-all-ROSBridge-srv-methods))))

(setq *tfl* (instance ros::transform-listener :init))

(defun enable-walk-mode-cb
    (req)
  (let ((res (send req :response)))
    (send res :success (if (send req :data)
                           (enable-walk-mode)
                           (disable-walk-mode)))
    res))

(defun enable-walk-mode
    ()
  (let ((tm (ros::time-now)))
    (unless (send *tfl* :wait-for-transform *base-frame* *odom-frame* tm 5.0)
      (return-from enable-walk-mode nil))
    (send *ri* :set-base-coords (send *tfl* :lookup-transform *odom-frame* *base-frame* tm))
    (let ((req (instance std_srvs::SetBoolRequest :init)))
      (send req :data nil)
      (ros::service-call "/idle_footcoords/enable" req))
    (let ((req (instance std_srvs::SetBoolRequest :init)))
      (send req :data t)
      (ros::service-call "/simple_footcoords/enable" req))
    (let ((req (instance std_srvs::SetBoolRequest :init)))
      (send req :data t)
      (ros::service-call "/rtabmap/height_limit_rtabmap/enable" req))
    (let ((req (instance std_srvs::SetBoolRequest :init)))
      (send req :data t)
      (ros::service-call "/octomap/height_limit_octomap/enable" req))
    (send *ri* :start-auto-balancer-odom-safe)
    (send *ri* :start-impedance :arms)
    (send *ri* :start-st)
    ))

(defun disable-walk-mode
    ()
  (send *ri* :stop-st)
  (send *ri* :stop-impedance :arms)
  (send *ri* :stop-auto-balancer-odom-safe)
  (let ((req (instance std_srvs::SetBoolRequest :init)))
    (send req :data nil)
    (ros::service-call "/rtabmap/height_limit_rtabmap/enable" req))
  (let ((req (instance std_srvs::SetBoolRequest :init)))
    (send req :data nil)
    (ros::service-call "/octomap/height_limit_octomap/enable" req))
  (let ((tm (ros::time-now)))
    (unless (and (send *tfl* :wait-for-transform *base-frame* *odom-frame* tm 5.0)
                 (send *tfl* :wait-for-transform *base-footprint-frame* *base-frame* tm 5.0))
      (return-from disable-walk-mode nil))
    (let ((req-base (instance multicontact_controller_msgs::SetTransformStampedRequest :init))
          (req-base-footprint (instance multicontact_controller_msgs::SetTransformStampedRequest :init)))
      (send req-base :transform :header :stamp (ros::time-now))
      (send req-base :transform :header :frame_id *odom-frame*)
      (send req-base :transform :child_frame_id *base-frame*)
      (send req-base :transform :transform (ros::coords->tf-transform (send *tfl* :lookup-transform *odom-frame* *base-frame* tm)))
      (send req-base-footprint :transform :header :stamp (ros::time-now))
      (send req-base-footprint :transform :header :frame_id *base-frame*)
      (send req-base-footprint :transform :child_frame_id *base-footprint-frame*)
      (send req-base-footprint :transform :transform (ros::coords->tf-transform (send *tfl* :lookup-transform *base-frame* *base-footprint-frame* tm)))
      (ros::service-call "/idle_footcoords/set_body_transform" req-base)
      (ros::service-call "/idle_footcoords/set_base_footprint_transform" req-base-footprint)))
  (let ((req (instance std_srvs::SetBoolRequest :init)))
      (send req :data nil)
      (ros::service-call "/simple_footcoords/enable" req))
  (let ((req (instance std_srvs::SetBoolRequest :init)))
    (send req :data t)
    (ros::service-call "/idle_footcoords/enable" req))
  )

(ros::advertise-service "enable_walk_mode" std_srvs::SetBool #'enable-walk-mode-cb)

(ros::rate 10)

(while (ros::ok)
  (ros::spin-once)
  (ros::sleep))

